{
    "openapi": "3.1.0",
    "info": {
        "version": "1.0.0",
        "title": "Screenshothis API",
        "description": "API designed to take screenshots of websites"
    },
    "servers": [
        {
            "url": "https://api.screenshothis.com",
            "description": "Production Server"
        }
    ],
    "components": {
        "securitySchemes": {
            "ApiKeyQuery": {
                "type": "apiKey",
                "in": "query",
                "name": "api_key"
            }
        },
        "schemas": {
            "HealthCheck": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "enum": [
                            "healthy",
                            "degraded",
                            "unhealthy"
                        ]
                    },
                    "timestamp": {
                        "type": "string"
                    },
                    "uptime": {
                        "type": "number"
                    },
                    "checks": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "status": {
                                    "type": "string",
                                    "enum": [
                                        "pass",
                                        "fail"
                                    ]
                                },
                                "duration": {
                                    "type": "number"
                                },
                                "error": {
                                    "type": "string"
                                },
                                "details": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "nullable": true
                                    }
                                }
                            },
                            "required": [
                                "name",
                                "status"
                            ]
                        }
                    },
                    "version": {
                        "type": "string"
                    }
                },
                "required": [
                    "status",
                    "timestamp",
                    "uptime",
                    "checks"
                ]
            }
        },
        "parameters": {}
    },
    "paths": {
        "/v1/screenshots/take": {
            "get": {
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "minLength": 32
                        },
                        "required": true,
                        "name": "api_key",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "format": "uri"
                        },
                        "required": true,
                        "name": "url",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "required": false,
                        "name": "selector",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "number",
                            "nullable": true,
                            "default": 1920
                        },
                        "required": false,
                        "name": "width",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "number",
                            "nullable": true,
                            "default": 1080
                        },
                        "required": false,
                        "name": "height",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "boolean",
                            "nullable": true,
                            "default": false
                        },
                        "required": false,
                        "name": "is_mobile",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "boolean",
                            "nullable": true,
                            "default": false
                        },
                        "required": false,
                        "name": "is_landscape",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "boolean",
                            "nullable": true,
                            "default": false
                        },
                        "required": false,
                        "name": "has_touch",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "number",
                            "nullable": true,
                            "default": 1
                        },
                        "required": false,
                        "name": "device_scale_factor",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "jpeg",
                                "png",
                                "webp"
                            ],
                            "default": "jpeg"
                        },
                        "required": false,
                        "name": "format",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "number",
                            "minimum": 20,
                            "maximum": 100,
                            "default": 80
                        },
                        "required": false,
                        "name": "quality",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "boolean",
                            "nullable": true,
                            "default": false
                        },
                        "required": false,
                        "name": "block_ads",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "boolean",
                            "nullable": true,
                            "default": false
                        },
                        "required": false,
                        "name": "block_cookie_banners",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "boolean",
                            "nullable": true,
                            "default": false
                        },
                        "required": false,
                        "name": "block_trackers",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "required": false,
                        "name": "block_requests",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "document",
                                    "stylesheet",
                                    "image",
                                    "media",
                                    "font",
                                    "script",
                                    "texttrack",
                                    "xhr",
                                    "fetch",
                                    "prefetch",
                                    "eventsource",
                                    "websocket",
                                    "manifest",
                                    "signedexchange",
                                    "ping",
                                    "cspviolationreport",
                                    "preflight",
                                    "other"
                                ]
                            },
                            "default": []
                        },
                        "required": false,
                        "name": "block_resources",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "light",
                                "dark"
                            ],
                            "default": "light"
                        },
                        "required": false,
                        "name": "prefers_color_scheme",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "no-preference",
                                "reduce"
                            ],
                            "default": "no-preference"
                        },
                        "required": false,
                        "name": "prefers_reduced_motion",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "boolean",
                            "nullable": true,
                            "default": false
                        },
                        "required": false,
                        "name": "is_cached",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "number",
                            "minimum": 3600,
                            "maximum": 31622400,
                            "default": 3600
                        },
                        "required": false,
                        "name": "cache_ttl",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "required": false,
                        "name": "cache_key",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "required": false,
                        "name": "user_agent",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "maxLength": 8192
                        },
                        "required": false,
                        "name": "headers",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "maxLength": 4096
                        },
                        "required": false,
                        "name": "cookies",
                        "in": "query"
                    },
                    {
                        "schema": {
                            "type": "boolean",
                            "nullable": true,
                            "default": false
                        },
                        "required": false,
                        "name": "bypass_csp",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Optimized screenshot response with enhanced CDN support",
                        "content": {
                            "image/jpeg": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "image/png": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "image/webp": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "304": {
                        "description": "Not Modified - Content hasn't changed"
                    },
                    "403": {
                        "description": "Quota exceeded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        },
                                        "requestId": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "requestId"
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "requestId": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "code": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "requestId",
                                        "message",
                                        "code"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Health check passed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HealthCheck"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Health check failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HealthCheck"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/health/ready": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Service is ready",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "ready"
                                            ]
                                        },
                                        "timestamp": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "timestamp"
                                    ]
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service is not ready",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "not ready"
                                            ]
                                        },
                                        "timestamp": {
                                            "type": "string"
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "timestamp",
                                        "error"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/health/live": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Service is alive",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "alive"
                                            ]
                                        },
                                        "timestamp": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "timestamp"
                                    ]
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service is not alive",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "not alive"
                                            ]
                                        },
                                        "timestamp": {
                                            "type": "string"
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "timestamp",
                                        "error"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
